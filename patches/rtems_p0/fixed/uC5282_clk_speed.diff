Index: c/src/lib/libbsp/m68k/uC5282/startup/bspstart.c
===================================================================
RCS file: /usr1/CVS/rtems/c/src/lib/libbsp/m68k/uC5282/startup/bspstart.c,v
retrieving revision 1.59
diff -c -r1.59 bspstart.c
*** c/src/lib/libbsp/m68k/uC5282/startup/bspstart.c	26 Apr 2010 17:44:57 -0000	1.59
--- c/src/lib/libbsp/m68k/uC5282/startup/bspstart.c	3 Feb 2011 17:58:21 -0000
***************
*** 22,27 ****
--- 22,28 ----
  #include <rtems/error.h>
  #include <errno.h>
  #include <stdio.h>
+ #include <mcf5282/mcf5282.h>
  
  /*
   * Location of 'VME' access
***************
*** 34,40 ****
--- 35,45 ----
   */
  extern char RamSize[];
  extern char RamBase[];
+ extern char _CPUClockSpeed[];
+ extern char _PLLRefClockSpeed[];
  
+ uint32_t BSP_sys_clk_speed = (uint32_t)_CPUClockSpeed;
+ uint32_t BSP_pll_ref_clock = (uint32_t)_PLLRefClockSpeed;
  /*
   * CPU-space access
   * The NOP after writing the CACR is there to address the following issue as
***************
*** 236,242 ****
   */
  void bsp_start( void )
  {
!   int i;
  
    /*
     * Set up default exception handler
--- 241,249 ----
   */
  void bsp_start( void )
  {
!   int   i;
!   const char *clk_speed_str;
!   uint32_t clk_speed, mfd, rfd;
  
    /*
     * Set up default exception handler
***************
*** 299,311 ****
                       MCF5282_CS_CSMR_V;
    MCF5282_CS2_CSCR = MCF5282_CS_CSCR_PS_16;
    MCF5282_GPIO_PJPAR |= 0x06;
- }
  
! extern char _CPUClockSpeed[];
  
  uint32_t bsp_get_CPU_clock_speed(void)
  {
!   return( (uint32_t)_CPUClockSpeed);
  }
  
  /*
--- 306,374 ----
                       MCF5282_CS_CSMR_V;
    MCF5282_CS2_CSCR = MCF5282_CS_CSCR_PS_16;
    MCF5282_GPIO_PJPAR |= 0x06;
  
!   /*
!    * Hopefully, the UART clock is still correctly set up
!    * so they can see the printk() output...
!    */
!   clk_speed = 0;
!   printk("Trying to figure out the system clock\n");
!   printk("Checking ENV variable SYS_CLOCK_SPEED:\n");
!   if ( (clk_speed_str = bsp_getbenv("SYS_CLOCK_SPEED")) ) {
!     printk("Found: %s\n", clk_speed_str);
! 	for ( clk_speed = 0, i=0;
! 	      clk_speed_str[i] >= '0' && clk_speed_str[i] <= '9';
! 	      i++ ) {
! 		clk_speed = 10*clk_speed + clk_speed_str[i] - '0';
! 	}
! 	if ( 0 != clk_speed_str[i] ) {
! 		printk("Not a decimal number; I'm not using this setting\n");
! 		clk_speed = 0;
! 	}
!   } else {
!     printk("Not set.\n");
!   }
! 
!   if ( 0 == clk_speed )
! 	clk_speed = BSP_sys_clk_speed;
! 
!   if ( 0 == clk_speed ) {
! 	printk("Using some heuristics to determine clock speed...\n");
! 	printk("Assuming %uHz PLL ref. clock\n", BSP_pll_ref_clock);
! 	if ( 0xf8 != MCF5282_CLOCK_SYNSR ) {
! 	  printk("FATAL ERROR: Unexpected SYNSR contents, can't proceed\n");
! 	  bsp_sysReset(0);
! 	}
! 	mfd = MCF5282_CLOCK_SYNCR;
! 	rfd = (mfd >>  8) & 7;
! 	mfd = (mfd >> 12) & 7;
! 	/* Check against 'known' cases */
! 	if ( 0 != rfd || (2 != mfd && 3 != mfd) ) {
! 	  printk("WARNING: Pll divisor/multiplier has unknown value; \n");
! 	  printk("         either your board is not 64MHz or 80Mhz or\n");
! 	  printk("         it uses a PLL reference other than 8MHz.\n");
! 	  printk("         I'll proceed anyways but you might have to\n");
! 	  printk("         reset the board and set uCbootloader ENV\n");
! 	  printk("         variable \"SYS_CLOCK_SPEED\".\n");
! 	}
! 	mfd = 2 * (mfd + 2);
! 	/* sysclk = pll_ref * 2 * (MFD + 2) / 2^(rfd) */
! 	printk("PLL multiplier: %u, output divisor: %u\n", mfd, rfd);
! 	clk_speed = (BSP_pll_ref_clock * mfd) >> rfd;
!   }
! 
!   if ( 0 == clk_speed ) {
! 	printk("FATAL ERROR: Unable to determine system clock speed\n");
! 	bsp_sysReset(0);
!   } else {
!   	BSP_sys_clk_speed = clk_speed;
! 	printk("System clock speed: %uHz\n", bsp_get_CPU_clock_speed());
!   }
! }
  
  uint32_t bsp_get_CPU_clock_speed(void)
  {
!   return( BSP_sys_clk_speed );
  }
  
  /*
Index: c/src/lib/libbsp/m68k/uC5282/startup/linkcmds
===================================================================
RCS file: /usr1/CVS/rtems/c/src/lib/libbsp/m68k/uC5282/startup/linkcmds,v
retrieving revision 1.16
diff -c -r1.16 linkcmds
*** c/src/lib/libbsp/m68k/uC5282/startup/linkcmds	16 Sep 2008 22:16:26 -0000	1.16
--- c/src/lib/libbsp/m68k/uC5282/startup/linkcmds	3 Feb 2011 17:58:21 -0000
***************
*** 30,37 ****
  
  /*
   * System clock speed
   */
! _CPUClockSpeed = DEFINED(_CPUClockSpeed) ? _CPUClockSpeed : 64000000 ;
  
  /*
   * Location of on-chip devices
--- 30,46 ----
  
  /*
   * System clock speed
+  *
+  * If autodetection of the system clock pased on the PLL ref. clock
+  * (AFAIK 8MHz for both 64MHz and 80MHz boards) doesn't work then
+  * you can:
+  *   - define (nonzero) system clock speed from app- linkflags (or here)
+  *   - use a uCbootloader env. var: SYS_CLOCK_SPEED to define it.
+  * You can also redefine the PLL reference clock speed from linkflags
+  * or here...
   */
! _CPUClockSpeed    = DEFINED(_CPUClockSpeed)    ? _CPUClockSpeed : 0 ;
! _PLLRefClockSpeed = DEFINED(_PLLRefClockSpeed) ? _PLLRefClockSpeed : 8000000;
  
  /*
   * Location of on-chip devices
